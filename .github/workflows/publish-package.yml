name: Publish

on:
  workflow_call:
    secrets:
      GPG_PRIVATE_KEY:
        description: "GPG private key"
        required: true

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.configuration }}
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Plan Matrix
        id: matrix
        run: |
          (
            echo "configuration<<JSON"
            jq -s '{ "include": . }' artifacts/*/package.json
            echo "JSON\n"
          }' | tee -a $GITHUB_OUTPUT
      
  publish:
    permissions:
      contents: write

    runs-on: ubuntu-latest

    #needs: [ configure ]
    #strategy:
      #matrix: ${{ fromJSON(needs.settings.outputs.matrix) }}

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/artifacts

      - name: Job Setup
        uses: jordansissel/actions-experiments/.github/actions/cache-apt@main
        with:
          packages: reprepro gnupg debsigs createrepo-c

      - name: Configure GPG
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          KEY_ID: ${{ vars.KEY_ID }}
        run: |
          echo "::add-mask::$GPG_PRIVATE_KEY"
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          echo "$KEY_ID:6:" | tr -d ' ' | gpg --batch --import-ownertrust --pinentry-mode=loopback

      - uses: actions/checkout@v4
        with:
          ref: pages

      # XXX: Signing should happen when the packages are created instead.
      #- name: Sign debs
        #env:
          #KEY_ID: ${{ vars.KEY_ID }}
        #run: |
          #find "${RUNNER_TEMP}/artifacts" -type f -name '*.deb' -print0 | \
            #xargs -0t debsigs -v --gpgopts="--batch --no-tty --pinentry-mode=loopback" --sign=origin --default-key="$KEY_ID" 

      - name: Run reprepro
        run: |
          for artifact in "${RUNNER_TEMP}/artifacts/"*/package.json ; do
            echo $artifact
            cat $artifact
            echo 
            # Parse JSON
            # depending on the platform, run reprepro or createrepo
            # Repo should be "repository/<system-id>/<system-version>/"
            # reprepro includedeb will copy the file, but createrepo doesn't copy anything
          done

            #reprepro -Vb repo includedeb any
            #createrepo ...

      - name: Commit and push
        run: |
          # Need to set git user and email
          # Citation> https://github.com/actions/checkout?tab=readme-ov-file#push-a-commit-using-the-built-in-token
          #git config user.name "github-actions[bot]"
          #git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          #git add repo
          #git commit repo -m "reprepro packages"
          #git push
name: Package FPM via docker

on:
  workflow_dispatch:

env:
  registry: ghcr.io

jobs:
  package:
    name: ðŸ“¦ FPM v${{ matrix.version }} for ${{ matrix.image }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version: [ 1.16.0 ]
        image: [ "rockylinux:9", "fedora:42", "ubuntu:24.04", "ubuntu:22.04", "debian:11", "debian:12" ]

    env:
      # docker/build-push-action is documented to output an 'imageid', but in
      # practice, it seems to only output 'metadata' and nothing else
      # So, in order to know what docker image we just built, we gotta name it with a tag.
      # Reference: https://github.com/docker/build-push-action/issues/1209
      TARGET_TAG: "lolcomputers"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        id: container
        uses: docker/build-push-action@v6
        with:
          context: fpm
          push: false
          tags: ${{ env.TARGET_TAG }}
          build-args: |
            # See fpm/Dockerfile for args
            IMAGE=${{ matrix.image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Grab package file
        id: package
        run: |
          # Extract content from the docker image built in the previous step

          docker run ${{ env.TARGET_TAG }} tar -zc target | tar -zvx | tee files

          (
            echo "files<<FILES"
            cat files
            echo "FILES"
          ) >> $GITHUB_OUTPUT

      - name: "Verify package works"
        run: |
          echo "> Package file: ${{ steps.package.outputs.files }}"

          docker run --workdir /tmp \
            --volume="./fpm/verify.sh:/tmp/verify.sh:z" \
            --volume="./target:/tmp/target:z" \
            ${{ matrix.image }} sh -x /tmp/verify.sh /tmp/target/

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.image }}
          path: ${{ steps.package.outputs.files }}
